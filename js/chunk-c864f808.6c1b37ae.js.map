{"version":3,"sources":["webpack:///./src/views/questionList.vue?3801","webpack:///./src/components/phrase.vue?0ac1","webpack:///src/components/phrase.vue","webpack:///./src/components/phrase.vue?fe9c","webpack:///./src/components/phrase.vue","webpack:///src/views/questionList.vue","webpack:///./src/views/questionList.vue?625e","webpack:///./src/views/questionList.vue","webpack:///./src/views/questionList.vue?c739","webpack:///./src/components/phrase.vue?5cea"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","staticRenderFns","_v","model","value","callback","$$v","expression","component"],"mappings":"4KAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,WAAW,IACjJG,EAAkB,GCDlB,EAAS,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,UAAU,CAACF,EAAG,KAAK,CAACJ,EAAIQ,GAAG,wBAAwBJ,EAAG,KAAK,CAACJ,EAAIQ,GAAG,QAAQJ,EAAG,IAAI,CAACJ,EAAIQ,GAAG,oCAAoCJ,EAAG,eAAe,CAACK,MAAM,CAACC,MAAOV,EAAS,MAAEW,SAAS,SAAUC,GAAMZ,EAAIU,MAAME,GAAKC,WAAW,YAAY,IAC3V,EAAkB,GCUtB,G,8BAAA,CACE,KAAF,SACE,KAFF,WAGI,MAAJ,CACM,MAAN,u+BA2BM,OAAN,GACM,OAAN,IAGE,QAAF,CACI,SADJ,SACA,GAGM,IAFA,IAAN,KACA,WACA,cACQ,GAAR,iBACU,GAAV,EACU,MAGV,GACA,uBACU,KAAV,SACU,KAAV,4BAKI,UAlBJ,SAkBA,GAAM,IAAN,OAEA,IACA,gBACQ,GAAR,EACA,wBACU,GAAV,EACA,aACY,GAAZ,EACY,EAAZ,IAEY,QAAZ,yBAGU,EAAV,wBACU,EAAV,KAGM,GAAN,IAEI,kBAtCJ,SAsCA,GACM,IAAN,EACM,GAAN,YACQ,OAAR,EAOM,IALA,IAAN,gCACA,KACA,IACA,IACA,IACA,oBAEU,EAAV,GADA,IACA,uBAEA,EAEQ,MAAR,gDACU,EAAV,KAEA,aACU,EAAV,SACU,EAAV,GAEA,SACU,EAAV,KACU,EAAV,8BAGM,IAAN,wBACM,QAAN,kBAGE,SAAF,CACI,UAAJ,WACM,OAAN,qBAGE,QAAF,WACI,QAAJ,kIACI,QAAJ,eACI,KAAJ,yIACI,QAAJ,kBACI,QAAJ,eACI,KAAJ,iIACI,QAAJ,qBChIgV,I,wBCQ5UC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QCVf,GACE,KAAF,eACE,KAFF,WAGI,MAAJ,IAEE,WAAF,CAAI,OAAJ,GACE,QAAF,GACE,SAAF,GACE,QAAF,cCjBsV,ICQlV,G,UAAY,eACd,EACAf,EACAQ,GACA,EACA,KACA,KACA,OAIa,e,2CCnBf,0BAAihB,EAAG,G,kCCAphB,yBAA2gB,EAAG","file":"js/chunk-c864f808.6c1b37ae.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"questionList\"},[_c('phrase')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"phrase\"},[_c('h5',[_vm._v(\"给定一个字符串，寻找最长回文字符串！\")]),_c('h5',[_vm._v(\"思路\")]),_c('p',[_vm._v(\" 思路1，把每一个字符串拿出来，判断是回文字符串，并找出最长\")]),_c('mavon-editor',{model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<!--    寻找最长回文字符串-->\r\n    <div class=\"phrase\">\r\n        <h5>给定一个字符串，寻找最长回文字符串！</h5>\r\n        <h5>思路</h5>\r\n        <p> 思路1，把每一个字符串拿出来，判断是回文字符串，并找出最长</p>\r\n        <mavon-editor v-model=\"value\"></mavon-editor>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"phrase\",\r\n        data() {\r\n            return {\r\n                value:'##### 给定一个字符串，寻找最长回文字符串！\\n' +\r\n                    '> 思路1：把每一个字符串拿出来，判断是回文字符串，并找出最长。代码如下：\\n' +\r\n                    '```javascript\\n' +\r\n                    'function getPhrase(str){\\n' +\r\n                    '                // 思路1，把每一个字符串拿出来，判断是回文字符串，就拿出长度\\n' +\r\n                    '                let index = 3;\\n' +\r\n                    '                const test =  (i)=> {\\n' +\r\n                    '                    i = i + 1\\n' +\r\n                    '                    if(parseInt(i) > str.length - index){\\n' +\r\n                    '                        index = index + 1\\n' +\r\n                    '                        if(index <= str.length){\\n' +\r\n                    '                            i = -1\\n' +\r\n                    '                            test(i)\\n' +\r\n                    '                        }else {\\n' +\r\n                    '                            console.log(this.phrase,this.maxLen)\\n' +\r\n                    '                        }\\n' +\r\n                    '                    }else {\\n' +\r\n                    '                        this.isPhrase(str.substr(i,index))\\n' +\r\n                    '                        test(i)\\n' +\r\n                    '                    }\\n' +\r\n                    '                }\\n' +\r\n                    '                test(-1)\\n' +\r\n                    '          }\\n' +\r\n                    'console.time(\\'方法一耗时：\\')\\n' +\r\n                    'getPhrase(\\'12aa2111fwefwefwkfwpjfpwjpjeogjerklgjwoifjowejfoiwfowjosjfo2382389027u39idhjughewuihwifnwkjefbwiugfuwigfhiwuhfiwhif\\')\\n' +\r\n                    'console.timeEnd(\\'方法一耗时：\\')\\n' +\r\n                    '```',\r\n                phrase:'',\r\n                maxLen:0\r\n            }\r\n        },\r\n        methods: {\r\n            isPhrase(str){\r\n                let flag = true\r\n                let len = str.length\r\n                for(let i = 0 ; i < len/2 ; i++){\r\n                    if(str[i] !== str[len - 1 - i]){\r\n                        flag = false\r\n                        break;\r\n                    }\r\n                }\r\n                if(flag){\r\n                    if(str.length > this.maxLen){\r\n                        this.phrase = str;\r\n                        this.maxLen = this.phrase.length\r\n                    }\r\n                }\r\n\r\n            },\r\n            getPhrase(str){\r\n                // 思路1，把每一个字符串拿出来，判断是回文字符串，就拿出长度\r\n                let index = 3;\r\n                const test =  (i)=> {\r\n                    i = i + 1\r\n                    if(parseInt(i) > str.length - index){\r\n                        index = index + 1\r\n                        if(index <= str.length){\r\n                            i = -1\r\n                            test(i)\r\n                        }else {\r\n                            console.log(this.phrase,this.maxLen)\r\n                        }\r\n                    }else {\r\n                        this.isPhrase(str.substr(i,index))\r\n                        test(i)\r\n                    }\r\n                }\r\n                test(-1)\r\n            },\r\n            longestPalindrome(s){\r\n                let sub\r\n                if (s.length == 1) {\r\n                    return s\r\n                }\r\n                let str = '#' + s.split('').join('#') + '#'\r\n                let rl = []\r\n                let mx = 0\r\n                let pos = 0\r\n                let ml = 0\r\n                for (let i = 0; i < str.length; i++){\r\n                    if (i < mx) {\r\n                        rl[i] = Math.min(rl[2 * pos - i], mx - i)\r\n                    } else {\r\n                        rl[i] = 1\r\n                    }\r\n                    while (i - rl[i] > 0 && i + rl[i] < str.length && str[i - rl[i]] == str[i + rl[i]]) {\r\n                        rl[i]++\r\n                    }\r\n                    if (rl[i] + i - 1 > mx) {\r\n                        mx = rl[i] + i - 1\r\n                        pos = i\r\n                    }\r\n                    if (ml < rl[i]) {\r\n                        ml = rl[i]\r\n                        sub = str.substring(i - rl[i]+1, i + rl[i])\r\n                    }\r\n                }\r\n                const val = sub.split('#').join('')\r\n                console.log(val,val.length)\r\n            }\r\n        },\r\n        computed: {\r\n            phraseLen:function () {\r\n                return this.phrase.length\r\n            }\r\n        },\r\n        created: function () {\r\n            console.log('选择字符串为：12aa2111fwefwefwkfwpjfpwjpjeogjerklgjwoifjowejfoiwfowjosjfo2382389027u39idhjughewuihwifnwkjefbwiugfuwigfhiwuhfiwhif')\r\n            console.time('方法一耗时：')\r\n            this.longestPalindrome('12aa2111fwefwefwkfwpjfpwjpjeogjerklgjwoifjowejfoiwfowjosjfo2382389027u39idhjughewuihwifnwkjefbwiugfuwigfhiwuhfiwhif')\r\n            console.timeEnd('方法一耗时：')\r\n            console.time('方法二耗时：')\r\n            this.getPhrase('12aa2111fwefwefwkfwpjfpwjpjeogjerklgjwoifjowejfoiwfowjosjfo2382389027u39idhjughewuihwifnwkjefbwiugfuwigfhiwuhfiwhif')\r\n            console.timeEnd('方法二耗时：')\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .phrase {\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./phrase.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./phrase.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./phrase.vue?vue&type=template&id=9c73d272&\"\nimport script from \"./phrase.vue?vue&type=script&lang=js&\"\nexport * from \"./phrase.vue?vue&type=script&lang=js&\"\nimport style0 from \"./phrase.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n<!--    前端问题集合-->\r\n    <div class=\"questionList\">\r\n        <phrase></phrase>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import phrase from '../components/phrase'\r\n    export default {\r\n        name: \"questionList\",\r\n        data() {\r\n            return {}\r\n        },\r\n        components:{phrase},\r\n        methods: {},\r\n        computed: {},\r\n        created: function () {\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .questionList {\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./questionList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./questionList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./questionList.vue?vue&type=template&id=0f030dcb&\"\nimport script from \"./questionList.vue?vue&type=script&lang=js&\"\nexport * from \"./questionList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./questionList.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./questionList.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./questionList.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./phrase.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./phrase.vue?vue&type=style&index=0&lang=scss&\""],"sourceRoot":""}